// Autogenerated from "./BlackToAlpha.glsl"

import * as PIXI from "pixi.js";


interface Uniforms
{

}

export class BlackToAlpha extends PIXI.Filter<Uniforms>
{
  constructor(initialUniformValues?: Partial<Uniforms>)
  {
    super(undefined, source, initialUniformValues);
  }

  public setUniforms(uniforms: Partial<Uniforms>): void
  {
    for (const key in uniforms)
    {
      this.uniforms[key] = uniforms[key];
    }
  }
}

const source = `precision mediump float;

varying vec2 vTextureCoord;
uniform sampler2D uSampler;

void main()
{
  vec4 color = texture2D(uSampler, vTextureCoord);
  color.a = (color.r + color.g + color.b) / 3.0;

  gl_FragColor = color;
}
`;
